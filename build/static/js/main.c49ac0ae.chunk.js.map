{"version":3,"sources":["App.module.css","components/ContactList/ContactForm/ContactFrom.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","props","number","console","log","this","className","styles","form","type","pattern","title","value","required","onChange","onChangeInputHandler","input","button","onClick","addContactHandler","Component","ContactList","filteredContacts","deleteContact","list","map","contact","item","id","Filter","filter","handleFilterChange","label","heading","autoComplete","PhoneBook","contacts","target","setState","e","dublicateAlert","prevState","uuidv4","find","toLowerCase","alert","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c49ac0ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__27IO1\"};","import { Component } from \"react\";\r\nimport styles from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: this.props.name,\r\n        number: this.props.number,\r\n }\r\n  render() {\r\n      console.log(this.props)\r\n        const { name, number } = this.state;\r\n    return <>\r\n          <form className = {styles.form}>\r\n        <label>\r\n      <h3>Name</h3>\r\n      <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value = {name}\r\n        required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n      /></label>\r\n               <label>\r\n          <h3>Tel. number </h3>\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value = {number}\r\n            required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n          /></label>\r\n        <button type=\"button\" className={styles.button} onClick={this.props.addContactHandler}>Add Contact</button>\r\n      </form></>\r\n} }\r\n\r\nContactForm.propTypes = {\r\n  addContactHandler: PropTypes.func,\r\n  onChangeInputHandler: PropTypes.func,\r\n  dublicateAlert: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string\r\n}","import styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nfunction ContactList({ filteredContacts, deleteContact }) {\r\n    return (<ul className = {styles.list}>\r\n        {filteredContacts.map(contact => <li key={contact.id} className = {styles.item}>{contact.name} : {contact.number}\r\n            <button onClick={() => deleteContact(contact.id)} className = {styles.button}> Delete </button>\r\n        </li>)}\r\n    </ul> )\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array,\r\n    deleteContact: PropTypes.func\r\n}\r\n    \r\nexport default ContactList;","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\nexport default function Filter({ filter, handleFilterChange }) {\r\n     return <label className = {styles.label}>\r\n                <h3 className = {styles.heading}>Find contacts by name</h3> \r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                autoComplete=\"off\"\r\n                onChange = {handleFilterChange}\r\n             value={filter}\r\n             className = {styles.input}\r\n         >\r\n             \r\n            </input>\r\n            </label>\r\n}\r\n \r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilterChange:PropTypes.func,\r\n}","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from \"./components/ContactList/ContactForm/ContactFrom\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport styles from './App.module.css'\r\nexport default class PhoneBook extends Component {\r\n state = {\r\n  contacts: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ],\r\n  filter: '',\r\n}\r\n  onChangeInputHandler = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n  addContactHandler = e => {\r\n    // this.dublicateAlert(this.state.name)\r\n    if (this.dublicateAlert(this.state.name)) {\r\n      return \r\n    }\r\n    else {\r\n      this.setState(prevState => ({\r\n        contacts : [{ name: this.state.name, id: uuidv4(), number: this.state.number}, ...prevState.contacts],\r\n      }))\r\n     }\r\n  }\r\n  handleFilterChange = (e) => {\r\n    this.setState({ filter: e.target.value })\r\n  }\r\n  dublicateAlert = (name) => {\r\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts`)\r\n      return true\r\n  }\r\n  }\r\n  deleteContact = (id) => {\r\n    this.setState(prevState => ({\r\n       contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n    }))\r\n    // console.log(this.state.contacts);\r\n  }\r\n  componentDidMount() {\r\n    console.log('componentDidMount');\r\n    console.log(this.state.contacts)\r\n    console.log(this.state.filter)\r\n    const contacts = localStorage.getItem('contacts');\r\n    if (contacts) {\r\n      this.setState({\r\n      contacts: JSON.parse(contacts),\r\n    })\r\n\r\n    } \r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  render() {\r\n    // const { contacts, filter } = this.state;\r\n        const filteredContacts = this.state.contacts.filter(contact => {\r\n          return contact.name.toLowerCase().includes(this.state.filter.toLowerCase());\r\n        })\r\n    \r\n    // console.log(filteredContacts);\r\n    return <>\r\n      <h1 className = {styles.heading} >PhoneBook</h1>\r\n      <ContactForm\r\n        onChangeInputHandler={this.onChangeInputHandler}\r\n        addContactHandler={this.addContactHandler}\r\n        dublicateAlert = {this.dublicateAlert}\r\n        name={this.state.name}\r\n        number = {this.state.number}\r\n      />\r\n      <h3 className = {styles.heading}>Contacts</h3>\r\n      <Filter\r\n        filter={this.state.filter}\r\n        handleFilterChange = {this.handleFilterChange}\r\n      />\r\n      <ContactList\r\n        filteredContacts={filteredContacts}\r\n        deleteContact = {this.deleteContact}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PhoneBook from './App';\r\n\r\nReactDOM.render(<PhoneBook/>,document.querySelector('#root'))\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1IGe4\",\"button\":\"ContactForm_button__1q4nu\",\"input\":\"ContactForm_input__6xfCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2BDpJ\",\"item\":\"ContactList_item__3UdQB\",\"button\":\"ContactList_button__2HJph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Filter_heading__3Lp4Z\",\"input\":\"Filter_input__1curm\",\"label\":\"Filter_label__1YoBo\"};"],"sourceRoot":""}