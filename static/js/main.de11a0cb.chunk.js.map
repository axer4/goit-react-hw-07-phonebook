{"version":3,"sources":["components/ContactList/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Loader/loader.module.css","components/ContactList/ContactForm/ContactFrom.js","components/ContactList/ContactList.js","redux/actions.js","components/Filter/Filter.js","redux/operations.js","redux/selectors.js","components/Loader/Loader.js","App.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","className","styles","form","type","name","pattern","title","required","onChange","this","props","onChangeInputHandler","input","button","onClick","addContactHandler","Component","ContactList","filteredContacts","deleteContact","list","map","contact","item","number","id","contactsFilter","createAction","connect","dispatch","e","target","value","label","heading","autoComplete","axios","defaults","baseURL","addContact","createAsyncThunk","a","post","catch","error","console","log","data","getContact","get","contactId","delete","getContacts","state","contacts","getFilter","filter","getLoader","loader","Loader","style","contactsArr","onAddContact","useEffect","useState","setName","setNumber","dublicateAlert","find","toLowerCase","alert","length","includes","event","contactsList","createReducer","fulfilled","payload","_","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.de11a0cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ftPLs\",\"button\":\"ContactForm_button__1zKwz\",\"input\":\"ContactForm_input__3p7Vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__NI83L\",\"item\":\"ContactList_item__17jMX\",\"button\":\"ContactList_button__f2hXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Filter_heading__maaM3\",\"input\":\"Filter_input__20QDx\",\"label\":\"Filter_label__2j3f3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__tFsGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__tM2Bn\"};","import { Component } from \"react\";\r\nimport styles from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\nexport default class ContactForm extends Component {\r\n  render() {\r\n    return <>\r\n          <form className = {styles.form}>\r\n        <label>\r\n      <h3>Name</h3>\r\n      <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n      /></label>\r\n               <label>\r\n          <h3>Tel. number </h3>\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            \r\n            required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n          /></label>\r\n        <button type=\"button\" className={styles.button} onClick={this.props.addContactHandler}>Add Contact</button>\r\n      </form></>\r\n} }\r\n\r\nContactForm.propTypes = {\r\n  addContactHandler: PropTypes.func,\r\n  onChangeInputHandler: PropTypes.func,\r\n}","import styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nfunction ContactList({filteredContacts, deleteContact }) {\r\n\r\n    return (<ul className={styles.list}>\r\n        {\r\n             filteredContacts.map(contact => <li key={contact.id} className={styles.item}>{contact.name} : {contact.number} \r\n                    <button onClick={() => deleteContact(contact.id)} className={styles.button}> Delete </button>\r\n            </li>)\r\n            \r\n            }\r\n    </ul> )\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array,\r\n    deleteContact: PropTypes.func\r\n}\r\n    \r\nexport default ContactList;\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// export const addContact = (name, number) => ({\r\n//     type: \"addContact\",\r\n//     payload: {\r\n//         name: name,\r\n//         number: number,\r\n//         id: uuidv4(),\r\n//     },\r\n// });\r\n// export const deleteContact = value => ({\r\n//     type: \"deleteContact\",\r\n//     payload: value,\r\n// })\r\n// export const contactsFilter = filter => ({\r\n//     type: 'contactsFilter',\r\n//     payload: filter,\r\n// })\r\n// export const addContactsRequest = createAction('addContacts/request');\r\n// export const addContactsSuccess = createAction('addContacts/success');\r\n// export const addContactsError = createAction('addContacts/error');\r\n// export const getContactsRequest = createAction('getContacts/request');\r\n// export const getContactsSuccess = createAction('getContacts/success');\r\n// export const getContactsError = createAction('getContacts/error');\r\n// export const deleteContactsRequest = createAction('deleteContacts/request');\r\n// export const deleteContactsSuccess = createAction('deleteContacts/success');\r\n// export const deleteContactsError = createAction('deleteContacts/error');\r\n\r\n// export const addContact = createAction('addContact', (name,number) => {\r\n//     return {\r\n//         payload: {\r\n//             name: name,\r\n//             number: number,\r\n//             id: uuidv4(),\r\n//         }\r\n//     }\r\n// }) \r\n// export const deleteContact = createAction('deleteContact');\r\nexport const contactsFilter = createAction('contactsFilter');","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport { contactsFilter } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n  function Filter({ value,contactsFilter}) {\r\n     return <label className = {styles.label}>\r\n                <h3 className = {styles.heading}>Find contacts by name</h3> \r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                autoComplete=\"off\"\r\n                onChange = {contactsFilter}\r\n             className = {styles.input}\r\n         >\r\n            </input>\r\n            </label>\r\n}\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilterChange:PropTypes.func,\r\n}\r\nconst mapDispatchTopProps = dispatch => {\r\n    return {\r\n        contactsFilter : (e) => dispatch(contactsFilter(e.target.value))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchTopProps)(Filter);","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// import {\r\n//     addContactsSuccess,\r\n//     addContactsError,\r\n//     addContactsRequest,\r\n//     getContactsRequest,\r\n//     getContactsError,\r\n//     getContactsSuccess,\r\n//     deleteContactsRequest,\r\n//     deleteContactsSuccess,\r\n//     deleteContactsError\r\n// } from './actions'\r\naxios.defaults.baseURL = 'https://6198f0e0164fa60017c23248.mockapi.io';\r\n// export const addContact = (name,number) => dispatch => {\r\n//     const contacts = { name:name, number:number, }\r\n//     dispatch(addContactsRequest())\r\n//     axios\r\n//         .post('/contacts', contacts)\r\n//         .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n//         .catch(error => dispatch(addContactsError(error)))\r\n// \r\nexport const addContact = createAsyncThunk(\r\n    'contact/addContact',\r\n    async (contact) => {\r\n        const { data } = await axios.post('./contacts', contact)\r\n            .catch(error => console.log(error))\r\n        return data;\r\n    }\r\n\r\n)\r\n// export const getContact = () => dispatch => {\r\n//     dispatch(getContactsRequest())\r\n//     axios\r\n//         .get('/contacts')\r\n//         .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n//         .catch(error => dispatch(getContactsError(error)))\r\n// }\r\nexport const getContact = createAsyncThunk(\r\n    'contact/getContact',\r\n    async () => {\r\n        const { data } = await axios.get('./contacts')\r\n            .catch(error => console.log(error))\r\n        return data;\r\n    }\r\n)\r\n// export const deleteContact = id => dispatch => {\r\n//     dispatch(deleteContactsRequest())\r\n//     axios\r\n//         .delete(`/contacts/${id}`).then(() => dispatch(deleteContactsSuccess(id)))\r\n//     .catch(error => dispatch(deleteContactsError(error)))\r\n// }\r\nexport const deleteContact = createAsyncThunk(\r\n    'contact/deleteContact',\r\n    async (contactId) => {\r\n        const {data : {id}} = await axios.delete(`/contacts/${contactId}`)\r\n            .catch(error => console.log(error))\r\n        return id;\r\n    }\r\n)","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getLoader = state => state.loader;","import style from './loader.module.css';\r\nexport default function Loader() {\r\n    return <div className ={style.loader}><h2>Loading...</h2></div>\r\n}","\r\nimport ContactForm from \"./components/ContactList/ContactForm/ContactFrom\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport styles from './App.module.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact, getContact, deleteContact } from \"./redux/operations\";\r\nimport { getContacts, getFilter, getLoader } from \"./redux/selectors\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nfunction PhoneBook({ onAddContact, deleteContact, contactsArr, filter,getContact,loader}) {\r\n  useEffect(() => getContact(),[getContact])\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const onChangeInputHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:return\r\n    }\r\n  }\r\n  const addContactHandler = e => {\r\n    if (dublicateAlert(name)) {\r\n      return\r\n    }\r\n    else {\r\n      onAddContact(name,number)\r\n    }\r\n  }\r\n  const dublicateAlert = (name) => {\r\n    if (contactsArr.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts`)\r\n      return true\r\n    }\r\n  }\r\n  const filteredContacts = contactsArr.length > 0 ? contactsArr.filter(contact => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  }) : [];\r\n  //   useEffect(() => {\r\n  //   const saved = localStorage.getItem('contacts')\r\n  //   const savedArr = JSON.parse(saved);\r\n  //   return contactsArr.push(...savedArr);\r\n  // }, []);\r\n  return <>\r\n    <h1 className={styles.heading} >PhoneBook</h1>\r\n    <ContactForm\r\n      onChangeInputHandler={onChangeInputHandler}\r\n      addContactHandler={addContactHandler}\r\n    />\r\n     <h3 className={styles.heading}>Contacts</h3>\r\n    <Filter\r\n    />\r\n    { loader &&\r\n      <Loader />}\r\n   <ContactList\r\n      filteredContacts={filteredContacts}\r\n      deleteContact={deleteContact}\r\n    />\r\n  </>\r\n}\r\nconst mapDispatchTopProps = dispatch => {\r\n  return {\r\n    getContact: () => dispatch(getContact()),\r\n    onAddContact: (name, number) => dispatch(addContact({ name, number } )),\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactsArr: getContacts(state),\r\n    filter: getFilter(state),\r\n    loader : getLoader(state),\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchTopProps)(PhoneBook);","// import { applyMiddleware, combineReducers } from \"redux\";\r\nimport { addContact, getContact,deleteContact } from \"./operations\";\r\nimport { getDefaultMiddleware , configureStore, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  // addContactsError,\r\n  // addContactsRequest,\r\n  // addContactsSuccess,\r\n  contactsFilter,\r\n  // deleteContact,\r\n  // deleteContactsSuccess,\r\n  // getContactsSuccess,\r\n} from \"./actions\";\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n// }\r\n// const contactsList = (state = [...savedArr], { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'addContact': return  [...state, payload]\r\n                \r\n//         case 'deleteContact': return state.filter(contact => contact.id !== payload)\r\n//         default: return state;\r\n            \r\n//     };\r\n// }\r\n// const contactsFilter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'contactsFilter': return  payload;\r\n\r\n//         default: return state;\r\n//      }\r\n// }\r\n// const contactsReducer = combineReducers({\r\n//     contacts: contactsList,\r\n//     filter: contactsFilter,\r\n// });\r\n// const store = createStore(contactsReducer, composeWithDevTools(\r\n//     applyMiddleware()));\r\nconst contactsList = createReducer([], {\r\n   [getContact.fulfilled] : (state,{payload}) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state,payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload)\r\n});\r\nconst filter = createReducer('', {\r\n    [contactsFilter]: (_, { payload }) => payload,\r\n})\r\nconst loader = createReducer(false, {\r\n  [getContact.pending]: () => true,\r\n  [getContact.fulfilled]: () => false,\r\n  [getContact.rejected]: () => false,\r\n  \r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  \r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n})\r\n// const persistedReducer = persistReducer(persistConfig, combineReducers({\r\n//     contacts: contactsList,\r\n// }))\r\n// const myMiddleware = store => next => action => {\r\n\r\n//   console.log('прослойка')\r\n//   next(action);\r\n// }\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n      },\r\n    },\r\n  ),\r\n]\r\nconst store = configureStore({\r\n    reducer: {\r\n    contacts: contactsList,\r\n    filter: filter,\r\n    loader: loader,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n// const persistor = persistStore(store);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PhoneBook from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import { PersistGate } from 'redux-persist/es/integration/react';\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n        <PhoneBook/> \r\n    {/* </PersistGate> */}\r\n    </Provider > ,\r\n   document.querySelector('#root'))\r\n\r\n\r\n"],"sourceRoot":""}